snippet createtable "Create table" b
CREATE TABLE ${1:table_name} (
	${2}
);

endsnippet

snippet droptableif "Drop table if exists" b
DROP TABLE IF EXISTS ${1:table} ${2:cascade};

endsnippet

snippet index "Create index on table" b
CREATE INDEX IF NOT EXISTS ${1:index_name_idx} on ${2:table}(${3:col});

endsnippet

snippet primary "Auto increment integer primary key" b
${1:col_name} INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
endsnippet

snippet dropcolif "Drop table if exists" b
ALTER TABLE ${1:table} DROP COLUMN IF EXISTS ${2:col} ${3:cascade};

endsnippet

snippet insert "Insert into table" b
INSERT INTO ${1:table}(${2:col1,col2...}) values(${3:values});

endsnippet

snippet resetidentity "Resets id increment ON Table (also deletes all rows)" b
TRUNCATE ${1:table} RESTART IDENTITY;

endsnippet 

snippet addcol "add col to table" b
ALTER TABLE ${1:table} ADD COLUMN ${2:new_col_name} ${3:new_col_datatype};

endsnippet

snippet manytomany "create table for many to many relation" b
CREATE TABLE ${1:table} (
	${2:fkey_1} INTEGER, FOREIGN KEY (${2}) REFERENCES ${3:table_1}(${4:table_1_col}) ON DELETE CASCADE,
	${5:fkey_2} INTEGER, FOREIGN KEY (${5}) REFERENCES ${6:table_2}(${7:table_2_col}) ON DELETE CASCADE,
	CONSTRAINT ${1}_pkey PRIMARY KEY (${2},${5})
);

endsnippet

snippet createtabledropif "Drops table if exists then creates one"
DROP TABLE IF EXISTS ${1:table} ${2:cascade};
CREATE TABLE ${1:table} (
	${3}
);

endsnippet

snippet dropindex "Drop index on table" b
DROP INDEX IF EXISTS ${1:index_name};
endsnippet
