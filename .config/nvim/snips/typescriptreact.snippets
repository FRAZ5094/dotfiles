# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet rfc "react functional component" b
import React from "react";

interface Props{
	${3}
};

const ${1:`!p snip.rv = snip.basename`}:React.FC<Props> = (${2}) => {
	return(
		<div>
			${1:`!p snip.rv = snip.basename`}
		</div>
		)
};

export default ${1:`!p snip.rv = snip.basename`};
endsnippet

snippet useS "useState Hook" b
const [${1}, set${1}] = useState(${3:"${4}"})
endsnippet

snippet useE "useEffect Hook" b
useEffect(() => {
	${1:${0}}
		}${2})
endsnippet

snippet useC "useContext Hook" b
const ${1:context} = useContext(${2})
endsnippet

snippet useR "useRef(defaultValue)" b
const ${1:ref} = useRef(${2:null})
endsnippet
