let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd /media/fraser/HDD/github/amazon_killer/client/src
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +8 /media/fraser/HDD/github/amazon_killer/client/src/ProductCard.js
badd +235 /media/fraser/HDD/github/amazon_killer/client/src/Content.js
badd +4 /media/fraser/HDD/github/amazon_killer/client/src/ProductsGrid.js
badd +97 /media/fraser/HDD/github/amazon_killer/client/src/Navbar.js
argglobal
%argdel
$argadd ProductCard.js
edit /media/fraser/HDD/github/amazon_killer/client/src/ProductCard.js
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 93 + 186) / 372)
exe 'vert 2resize ' . ((&columns * 92 + 186) / 372)
exe 'vert 3resize ' . ((&columns * 92 + 186) / 372)
exe 'vert 4resize ' . ((&columns * 92 + 186) / 372)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 6 - ((5 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
6
normal! 032|
wincmd w
argglobal
if bufexists("/media/fraser/HDD/github/amazon_killer/client/src/ProductsGrid.js") | buffer /media/fraser/HDD/github/amazon_killer/client/src/ProductsGrid.js | else | edit /media/fraser/HDD/github/amazon_killer/client/src/ProductsGrid.js | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 4 - ((3 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
4
normal! 03|
wincmd w
argglobal
if bufexists("/media/fraser/HDD/github/amazon_killer/client/src/Navbar.js") | buffer /media/fraser/HDD/github/amazon_killer/client/src/Navbar.js | else | edit /media/fraser/HDD/github/amazon_killer/client/src/Navbar.js | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 97 - ((62 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
97
normal! 057|
wincmd w
argglobal
if bufexists("/media/fraser/HDD/github/amazon_killer/client/src/Content.js") | buffer /media/fraser/HDD/github/amazon_killer/client/src/Content.js | else | edit /media/fraser/HDD/github/amazon_killer/client/src/Content.js | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 233 - ((64 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
233
normal! 010|
wincmd w
3wincmd w
exe 'vert 1resize ' . ((&columns * 93 + 186) / 372)
exe 'vert 2resize ' . ((&columns * 92 + 186) / 372)
exe 'vert 3resize ' . ((&columns * 92 + 186) / 372)
exe 'vert 4resize ' . ((&columns * 92 + 186) / 372)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFcI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
